int sum(node * head)
{
        node * first = head;
        int total = 0;
        total  = sumR(head, first);
        return total;
}
int sumR(node * head, node * first)
{
        if (head->next == first)
                return first->data;
        else
                return(head->next->data + sumR(head->next, first));
}
int count(node * head)
{
        node * first = head;
        int total = 0;
        total  = countR(head, first);
        return total;
}
int countR(node * head, node * first)
{
        if (head->next == first)
                return 1;
        else
                return(1 + countR(head->next, first));
}

Here is the original list: 2 -> 16 -> 16 -> 0 -> 21 -> 57 -> 32 -> 8 -> 40 -> 38 -> 49 -> 18 -> 44 -> 2 -> 23 -> 5 -> 25 -> 28 -> 21 -> 79 -> 2

This list contains 21 number of items
iteritive count: 21
recursive count: 21
iteritive sum: 526
recursive sum: 526


The resulting list is... 2 -> 16 -> 16 -> 0 -> 21 -> 57 -> 32 -> 8 -> 40 -> 38 -> 49 -> 18 -> 44 -> 2 -> 23 -> 5 -> 25 -> 28 -> 21 -> 79 -> 2

This list contains 21 number of items
The sum of all data is: 526


